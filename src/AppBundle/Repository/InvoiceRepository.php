<?php

namespace AppBundle\Repository;

use Doctrine\ORM\AbstractQuery;
use Doctrine\ORM\EntityRepository;

/**
 * InvoiceRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class InvoiceRepository extends EntityRepository
{

    /**
     * @param \DateTime $from
     * @param bool $paid
     * @return array
     */
    public function findAmountGroupedByMonth(\DateTime $from, $paid = true)
    {
        return $this
            ->createQueryBuilder('o')
            ->select('CONCAT(MONTH(o.createdAt), \'-\', YEAR(o.createdAt)) as month, SUM(o.amount) as amount')
            ->where('o.createdAt > :from')
            ->andWhere('o.paid = :paid')
            ->groupBy('month')
            ->setParameter('from', $from)
            ->setParameter('paid', $paid)
            ->getQuery()
            ->getArrayResult()
            ;
    }

    /**
     * @param bool $paid
     * @return mixed
     */
    public function findCurrentMonth($paid = true)
    {
        return $this
            ->createQueryBuilder('o')
            ->select('SUM(o.amount)')
            ->where('CONCAT(MONTH(o.createdAt), \'-\', YEAR(o.createdAt)) = :month')
            ->andWhere('o.paid = :paid')
            ->setParameter('month', date('n-Y'))
            ->setParameter('paid', $paid)
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }

    /**
     * @param bool $paid
     * @return mixed
     */
    public function findCurrentYear($paid = true)
    {
        return $this
            ->createQueryBuilder('o')
            ->select('SUM(o.amount)')
            ->where('YEAR(o.createdAt) = :month')
            ->andWhere('o.paid = :paid')
            ->setParameter('month', date('Y'))
            ->setParameter('paid', $paid)
            ->getQuery()
            ->getSingleScalarResult()
            ;
    }

}
